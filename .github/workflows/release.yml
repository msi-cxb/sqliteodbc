name: release

on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release-sqliteodbc:
    runs-on: windows-latest
    steps:
        - name: checkout
          id: checkout_code
          uses: actions/checkout@v4

        - name: setup_msbuild
          id: setup_msbuild
          uses: microsoft/setup-msbuild@v2

        # - name: build 32 bit ODBC driver
        #   id: build_32_bit_ODBC_driver
        #   shell: cmd
        #   run: |
        #     buildAndInstall.bat 32 true
        #     set installDir=.\install\32bit
        #     mkdir %installDir%
        #     xcopy /Q /Y sqlite3odbc.dll %installDir% 1>nul
        #     xcopy /Q /Y SQLiteODBCInstaller.exe %installDir% 1>nul
        #     echo ${{ github.sha }} > %installDir%\Release.txt
  
        # - name: build 64 bit ODBC driver
        #   id: build_64_bit_ODBC_driver
        #   shell: cmd
        #   run: |
        #     buildAndInstall.bat 64 true
        #     set installDir=.\install\64bit
        #     mkdir %installDir%
        #     xcopy /Q /Y sqlite3odbc.dll %installDir% 1>nul
        #     xcopy /Q /Y SQLiteODBCInstaller.exe %installDir% 1>nul
        #     echo ${{ github.sha }} > %installDir%\Release.txt
        
        - name: include vc_redist.x64
          id: include_vc_redist
          shell: cmd
          run: |
            set ARCH=amd64
            SET VSWHERE_EXE=%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe
            IF NOT EXIST "%VSWHERE_EXE%" SET VSWHERE_EXE=%ProgramFiles%\Microsoft Visual Studio\Installer\vswhere.exe
            SET VS_WHEREIS_CMD="%VSWHERE_EXE%" -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath -latest        
            echo VS_WHEREIS_CMD=%VS_WHEREIS_CMD%
            FOR /F "delims=" %%D IN ('%VS_WHEREIS_CMD%') DO (SET VSWHEREINSTALLDIR=%%D)
            echo VsWhereInstallDir = '%VSWHEREINSTALLDIR%'
            SET VSVARS32=%VSWHEREINSTALLDIR%\Common7\Tools\VsDevCmd.bat
            IF EXIST "%VSVARS32%" (
                    set CLARG=-arch=%ARCH%
            )
            SET VSVARS32=%VSVARS32:\\=\%
            echo "%VSVARS32%" %CLARG%
            CALL "%VSVARS32%" %CLARG% 1>nul
            echo **************************
            dir "%VSWHEREINSTALLDIR%"
            echo **************************
            SET VC_REDIST=%VCINSTALLDIR%\Redist\MSVC\v143\vc_redist.x64.exe
            set installDir=.\install\64bit
            xcopy /Q /Y "%VC_REDIST%" %installDir% 1>nul
            dir /s /b 
        

        # - name: run_msbuild
        #   id: run_msbuild
        #   run: |
        #     echo ${{ github.sha }} > Release.txt
        #     msbuild .\gitactionstest_dotnet8.sln -t:clean,build,publish -restore /p:Configuration=Release
            
        # - shell: cmd
        #   id: cmd
        #   run: |
        #     7z a gitactionstest_dotnet8.zip .\bin\Release\net8.0\publish\*
        #     dir /s /b 

        # - name: release
        #   uses: softprops/action-gh-release@v2
        #   if: startsWith(github.ref, 'refs/tags/')
        #   with:
        #     files: |
        #       Release.txt
        #       gitactionstest_dotnet8.zip

